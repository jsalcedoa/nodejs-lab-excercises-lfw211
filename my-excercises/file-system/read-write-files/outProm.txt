CONST { JOIN } = REQUIRE('PATH');

// ========================= FILE SYSTEM (FS) - SYNCHRONOUS READING AND WRITING =========================
CONST OUTSYNC = JOIN(__DIRNAME, 'OUT.TXT');
CONST { READFILESYNC, WRITEFILESYNC } = REQUIRE('FS');
CONST CONTENTS = READFILESYNC(__FILENAME, { ENCODING: 'UTF-8' });
WRITEFILESYNC(OUTSYNC, CONTENTS.TOUPPERCASE());
CONSOLE.LOG('SYNCHRONOUS READING AND WRITING COMPLETED.');

// // ========================= FILE SYSTEM (FS) - CALLBACK BASED READING AND WRITING =========================
CONST OUTCB = JOIN(__DIRNAME, 'OUTCB.TXT');
CONST { READFILE, WRITEFILE } = REQUIRE('FS'); // THIS IS COMMENTED TO AVOID NAME CONFLICT WITH THE PROMISE BASE SOLUTION. 
READFILE(__FILENAME, { ENCODING: 'UTF-8' }, (ERR, DATA) => {
    IF (ERR) {
        CONSOLE.LOG(ERR);
        RETURN;
    }
    WRITEFILE(OUTCB, DATA.TOUPPERCASE(), (ERR) => {
        IF (ERR) {
            CONSOLE.LOG(ERR);
            RETURN;
        }
        CONSOLE.LOG('CALLBACK READING AND WRITING COMPLETED.');
    })
})

// ========================= FILE SYSTEM (FS) - PROMISE BASED READING AND WRITING =========================
CONST { READFILE: READFILEPROM, WRITEFILE: WRITEFILEPROM } = REQUIRE('FS').PROMISES;

CONST RUN = ASYNC () => {
    CONST CONTENTSPROM = AWAIT READFILEPROM(__FILENAME, { ENCODING: 'UTF-8' });
    CONST OUTPROM = JOIN(__DIRNAME, 'OUTPROM.TXT');
    AWAIT WRITEFILEPROM(OUTPROM, CONTENTSPROM.TOUPPERCASE());
    CONSOLE.LOG('PROMISE READING AND WRITING COMPLETED.');
}

RUN().CATCH(CONSOLE.ERROR);
