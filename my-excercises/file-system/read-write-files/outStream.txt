CONST { PIPELINE, TRANSFORM } = REQUIRE('STREAM');
CONST { CREATEREADSTREAM, CREATEWRITESTREAM } = REQUIRE('FS');
CONST { JOIN } = REQUIRE('PATH');
CONST OUTSTREAM = JOIN(__DIRNAME, 'OUTSTREAM.TXT');

CONST CREATEUPPERCASESTREAM = () => {
    RETURN NEW TRANSFORM({
        TRANSFORM (CHUNK, ENC, NEXT) {
            CONST UPPERCASED = CHUNK.TOSTRING().TOUPPERCASE();
            NEXT(NULL, UPPERCASED);
        }
    })
}

PIPELINE(
    CREATEREADSTREAM(__FILENAME, { ENCODING: 'UTF-8'}),
    CREATEUPPERCASESTREAM(),
    CREATEWRITESTREAM(OUTSTREAM),
    (ERR) => {
        IF (ERR) {
            CONSOLE.LOG(ERR);
            RETURN;
        }
        CONSOLE.LOG('STREAM READING AND WRITING COMPLETED.')
    }
);

// ========================= THIS IS ANOTHER WAY OF EXECUTING THE READ AND WRITE, THIS OPTION DOES NOT LETS YOU ADD THE TRANSFORM =========================
// CONST READABLE = CREATEREADSTREAM(__FILENAME, { ENCODING: 'UTF-8' });
// CONST WRITABLE = CREATEWRITESTREAM(OUTSTREAM);
// READABLE.PIPE(WRITABLE);

// ========================= THIS IS ONLY DOING THE READ AND *** NOT *** THE WRITE =========================
// CONST READABLE = CREATEREADSTREAM(__FILENAME, { ENCODING: 'UTF-8'});
// READABLE.ON('DATA', (CHUNK) => CONSOLE.LOG(CHUNK));
// READABLE.ON('END', () => CONSOLE.LOG('FINISHED READING STREAM SINGLE FILE EXCERCISE.'));
